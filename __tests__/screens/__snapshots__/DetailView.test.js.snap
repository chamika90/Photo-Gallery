// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DetailView should match snapshot 1`] = `
<Modal
  animationType="none"
  deviceHeight={null}
  deviceWidth={null}
  hardwareAccelerated={false}
  hideModalContentWhileAnimating={false}
  onBackdropPress={[Function]}
  onModalHide={[Function]}
  onModalWillHide={[Function]}
  onModalWillShow={[Function]}
  onRequestClose={[Function]}
  panResponderThreshold={4}
  scrollHorizontal={false}
  scrollOffset={0}
  scrollOffsetMax={0}
  scrollTo={null}
  statusBarTranslucent={false}
  supportedOrientations={
    Array [
      "portrait",
      "landscape",
    ]
  }
  swipeThreshold={100}
  transparent={true}
  visible={true}
>
  <View
    accessible={true}
    focusable={true}
    forwardedRef={[Function]}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "black",
        "bottom": 0,
        "height": 1334,
        "left": 0,
        "opacity": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "width": 750,
      }
    }
  />
  <View
    deviceHeight={null}
    deviceWidth={null}
    forwardedRef={[Function]}
    hideModalContentWhileAnimating={false}
    onBackdropPress={[Function]}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    panResponderThreshold={4}
    pointerEvents="box-none"
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    statusBarTranslucent={false}
    style={
      Object {
        "flex": 1,
        "justifyContent": "flex-end",
        "margin": 0,
        "transform": Array [
          Object {
            "translateY": 1334,
          },
        ],
      }
    }
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#fff",
          "borderColor": "rgba(0, 0, 0, 0.1)",
          "borderTopLeftRadius": 15,
          "borderTopRightRadius": 15,
          "justifyContent": "center",
          "padding": 22,
        }
      }
    >
      <View
        style={
          Object {
            "width": "100%",
          }
        }
      >
        <View>
          <View
            style={
              Object {
                "flexDirection": "row",
                "paddingVertical": 5,
              }
            }
          >
            <Text
              style={
                Object {
                  "flex": 2,
                  "fontWeight": "bold",
                }
              }
            >
              Author
            </Text>
            <Text
              style={
                Object {
                  "flex": 3,
                }
              }
            >
              Alejandro Escamilla
            </Text>
          </View>
          <View
            style={
              Object {
                "flexDirection": "row",
                "paddingVertical": 5,
              }
            }
          >
            <Text
              style={
                Object {
                  "flex": 2,
                  "fontWeight": "bold",
                }
              }
            >
              Web
            </Text>
            <Text
              onPress={[Function]}
              style={
                Object {
                  "color": "#3366BB",
                  "flex": 3,
                  "padding": 5,
                  "textDecorationLine": "underline",
                }
              }
            >
              https://unsplash.com/photos/LNRyGwIJr5c
            </Text>
          </View>
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "marginHorizontal": 30,
                "marginTop": 20,
                "opacity": 1,
                "padding": 10,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "#e83e8c",
                  "fontWeight": "bold",
                }
              }
            >
              Download
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</Modal>
`;
